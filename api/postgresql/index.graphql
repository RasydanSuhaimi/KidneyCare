# Import your custom resolver
#import "resolvers/authHandler.js"

type Food_log {
  created_at: Date
  food_id: String!
  id: Int!
  kcal: Int
  label: String
  user_id: String!
  mealtype: String
  serving: Int
}

type Users {
  user_id: String!
  username: String
  email: String
  password: String
  token: String
}

type Mutation {
  insert_User(username: String!, email: String!, password: String!): Users
}

"""
The following queries are just a set of examples of how to access your schema.
Feel free to modify them or aggregate more.
"""
type Query {
  " Queries for type 'Food_log' "
  food_logByFood_id(food_id: String!): [Food_log]
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "food_log"
      configuration: "postgresql_config"
    )

  foodLogsForDate(user_id: String!, date: Date!): [Food_log]
    @dbquery(
      type: "postgresql"
      query: "SELECT * FROM food_log WHERE user_id = $1 AND DATE(created_at) = $2;"
      configuration: "postgresql_config"
    )

  food_logByFood_idAndLabel(food_id: String!, label: String!): [Food_log]
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "food_log"
      configuration: "postgresql_config"
    )
  food_logList: [Food_log]
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "food_log"
      configuration: "postgresql_config"
    )
  food_logPaginatedList(first: Int, after: Int): [Food_log]
    @dbquery(
      type: "postgresql"
      schema: "public"
      query: """
      SELECT "created_at", "food_id", "id", "kcal", "label", "user_id" FROM "food_log" LIMIT $1 OFFSET $2
      """
      configuration: "postgresql_config"
    )

  signIn(email: String!, password: String!): Users
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "users"
      configuration: "postgresql_config"
    )

  checkUsername(username: String!): Users
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "users"
      configuration: "postgresql_config"
    )

  checkEmail(email: String!): Users
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "users"
      configuration: "postgresql_config"
    )
}

"""
The following mutations are just a set of examples of how to access your schema.
Feel free to modify them or aggregate more.
"""
type Mutation {
  " Mutations for type 'Food_log' "
  deleteFood_log(
    id: Int!

  ): Food_log
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "food_log"
      dml: DELETE
      configuration: "postgresql_config"
    )
  insertFood_log(
    label: String
    food_id: String
    kcal: Int
    user_id: String
    mealtype: String
    serving: Int

  ): Food_log
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "food_log"
      dml: INSERT
      configuration: "postgresql_config"
    )

  insert_users(username: String!, email: String!, password: String!): Users
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "users"
      dml: INSERT
      configuration: "postgresql_config"
    )
}
